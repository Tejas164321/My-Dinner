
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users Collection:
    // - Authenticated users can read their own data.
    // - Students can read an admin's document to verify a secret code.
    // - Admins can read any user document.
    match /users/{userId} {
      function isAdmin() {
        return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
               get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      }

      allow read: if request.auth != null && 
                     (request.auth.uid == userId ||
                      isAdmin() ||
                      (exists(/databases/$(database)/documents/users/$(userId)) && 
                       get(/databases/$(database)/documents/users/$(userId)).data.role == 'admin'));
      
      // Allow user creation (signup) and updates by the user themselves or an admin.
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId || isAdmin();
      
      // Only admins can delete user documents.
      allow delete: if isAdmin();
    }

    // Messes Collection:
    // - Any authenticated user can list/read the messes.
    // - A user can create a mess document for themselves if their UID matches the document ID.
    match /messes/{messId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == messId;
      // No updates or deletes allowed on mess documents for now.
      allow update, delete: if false; 
    }
    
    // Holidays Collection:
    // - Any authenticated user can read holidays.
    // - Only admins can write/delete holidays.
    match /holidays/{holidayId} {
        allow read: if request.auth != null;
        allow write: if exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                       get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Leaves Collection:
    // - Users can read and write their own leave documents.
    // - Admins can read any leave document.
    match /leaves/{leaveId} {
        allow read: if request.auth != null &&
                        (request.auth.uid == resource.data.studentId ||
                         (exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
                          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'));
        allow create: if request.auth.uid == request.resource.data.studentId;
        allow delete: if request.auth.uid == resource.data.studentId;
    }
    
    // Plan Change Requests Collection:
    // - Students can create requests.
    // - Admins can read and delete requests.
    match /planChangeRequests/{requestId} {
        allow create: if request.auth != null && request.auth.uid == request.resource.data.studentUid;
        allow read, delete: if exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                                get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Menus Collection
    // - Anyone can read the menu (it is not sensitive data).
    // - Only admins can write to the menu.
     match /menus/{menuId} {
        allow read: if true;
        allow write: if exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                       get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
